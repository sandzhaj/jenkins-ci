node('regression-test') { withEnv([
	'SLACK_REGRESSION_CHANNEL=https://hooks.slack.com/services/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']) {

stage('git clone') {
try {
    git branch: 'develop',
     credentialsId: 'CorevisCI-git',
     url: 'git@github.com:sandzhaj/regression.git'
} catch (err) { sh '''
  curl -X POST --data-urlencode "payload={ \
    \\"channel\\": \\"#qa_regression_test\\", \
    \\"username\\": \\"webhookbot\\", \
    \\"text\\": \
      \\"Failed JOB: $JOB_NAME\\n \
      FAILD_STEP: Git clone\\n \
      Build Log: "$BUILD_URL"console\\", \
    \\"icon_emoji\\": \\":ghost:\\" \
  }" $SLACK_REGRESSION_CHANNEL
  exit 1
''' } 
}

stage('install_gems') {
try {
  timestamps {
    sh 'bundle install'
  }
} catch (err) { sh '''
  curl -X POST --data-urlencode "payload={ \
    \\"channel\\": \\"#qa_regression_test\\", \
    \\"username\\": \\"webhookbot\\", \
    \\"text\\": \
      \\"Failed JOB: $JOB_NAME\\n \
      FAILD_STEP: Install Gems\\n \
      Build Log: "$BUILD_URL"console\\", \
    \\"icon_emoji\\": \\":ghost:\\" \
  }" $SLACK_REGRESSION_CHANNEL
  exit 1
''' }
}

stage('Regression') {
try {
  sh '''
  export LANG="en_US.utf8"
  export LANGUAGE="en_US.utf8"
  export LC_ALL="en_US.utf8"
  export env=${TARGET_ENV}
  echo '172.16.100.5    staging-cshop.axaltacs.com' >> /etc/hosts
  echo '172.16.100.5    staging-cshop.spieshecker.com' >> /etc/hosts
  echo '172.16.100.5    staging-cshop.syrox.com' >> /etc/hosts
  echo '172.16.100.5    staging-cshop.standox.com' >> /etc/hosts
  echo '172.16.100.5    staging-cshop.cromax.com ' >> /etc/hosts

  xvfb-run -a bundle exec rspec --format html -o reporteg.html spec/${PATH_TO_TESTS}/
  '''

  sh '''
  curl -X POST --data-urlencode "payload={ \
    \\"channel\\": \\"#qa_regression_test\\", \
    \\"username\\": \\"webhookbot\\", \
    \\"text\\": \
      \\"Regression on: ${CLIENT_NAME}-${TARGET_ENV}\\n \
      Build result: SUCCESS\\n \
      ReportURL: "$BUILD_URL"HTML_Report\\", \
    \\"icon_emoji\\": \\":ghost:\\" \
  }" $SLACK_REGRESSION_CHANNEL
  '''

} catch (err) {

  currentBuild.result = 'UNSTABLE'
  sh '''
  curl -X POST --data-urlencode "payload={ \
    \\"channel\\": \\"#qa_regression_test\\", \
    \\"username\\": \\"webhookbot\\", \
    \\"text\\": \
      \\"Regression on: ${CLIENT_NAME}-${TARGET_ENV}\\n \
      Build result: FAILURE\\n \
      ReportURL: "$BUILD_URL"HTML_Report\\", \
    \\"icon_emoji\\": \\":ghost:\\" \
  }" $SLACK_REGRESSION_CHANNEL
  '''
  }
}

stage("Publish report") {
try {
  publishHTML([
    allowMissing: false,
    alwaysLinkToLastBuild: true,
    escapeUnderscores: false,
    includes: '**/*.png,**/*.html',
    keepAll: true, reportDir: '',
    reportFiles: 'reporteg.html',
    reportName: 'HTML_Report',
    reportTitles: ''
  ])

} catch (err) { sh '''
  curl -X POST --data-urlencode "payload={ \
    \\"channel\\": \\"#qa_regression_test\\", \
    \\"username\\": \\"webhookbot\\", \
    \\"text\\": \
      \\"Failed JOB: $JOB_NAME\\n \
      FAILD_STEP: Regression\\n \
      Build Log: "$BUILD_URL"console\\", \
    \\"icon_emoji\\": \\":ghost:\\" \
  }" $SLACK_REGRESSION_CHANNEL
  exit 1
''' }
}
}
}
